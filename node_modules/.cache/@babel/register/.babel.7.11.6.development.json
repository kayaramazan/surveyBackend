{
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/test/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/test/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/test/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/test/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/test/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const chai = require('chai');\n\nconst chaiHttp = require('chai-http');\n\nconst app = require('../app');\n\nchai.use(chaiHttp);\ndescribe('users', () => {\n  describe('GET /users', () => {\n    it('Users donucek', done => {\n      chai.request(app).get('/users').end((err, res) => {\n        if (err) done(err).expect(res).to.have.status(200).expect(res.body).to.be.an('array');\n        done();\n      });\n    });\n  }), describe('Anket Sorularini Listelene', () => {\n    describe('GET  /survey/questions', () => {\n      it('Sorular ve cevap siklari cekilicek', done => {\n        chai.request(app).get('/survey/questions').end((err, res) => {\n          if (err) done(err).expect(res).to.have.status(200).expect(res.body).to.be.an('array');\n          done();\n        });\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNoYWkiLCJyZXF1aXJlIiwiY2hhaUh0dHAiLCJhcHAiLCJ1c2UiLCJkZXNjcmliZSIsIml0IiwiZG9uZSIsInJlcXVlc3QiLCJnZXQiLCJlbmQiLCJlcnIiLCJyZXMiLCJleHBlY3QiLCJ0byIsImhhdmUiLCJzdGF0dXMiLCJib2R5IiwiYmUiLCJhbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQXhCOztBQUNBLE1BQU1FLEdBQUcsR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBbkI7O0FBRUFELElBQUksQ0FBQ0ksR0FBTCxDQUFTRixRQUFUO0FBRUFHLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBSTtBQUNsQkEsRUFBQUEsUUFBUSxDQUFDLFlBQUQsRUFBYyxNQUN0QjtBQUNJQyxJQUFBQSxFQUFFLENBQUMsZUFBRCxFQUFrQkMsSUFBRCxJQUFRO0FBQ3ZCUCxNQUFBQSxJQUFJLENBQUNRLE9BQUwsQ0FBYUwsR0FBYixFQUNDTSxHQURELENBQ0ssUUFETCxFQUVDQyxHQUZELENBRUssQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEtBQVc7QUFDWixZQUFHRCxHQUFILEVBQVFKLElBQUksQ0FBQ0ksR0FBRCxDQUFKLENBQ1BFLE1BRE8sQ0FDQUQsR0FEQSxFQUNLRSxFQURMLENBQ1FDLElBRFIsQ0FDYUMsTUFEYixDQUNvQixHQURwQixFQUVQSCxNQUZPLENBRUFELEdBQUcsQ0FBQ0ssSUFGSixFQUVVSCxFQUZWLENBRWFJLEVBRmIsQ0FFZ0JDLEVBRmhCLENBRW1CLE9BRm5CO0FBR1JaLFFBQUFBLElBQUk7QUFDUCxPQVBEO0FBUUgsS0FUQyxDQUFGO0FBVUgsR0FaTyxDQUFSLEVBYUFGLFFBQVEsQ0FBQyw0QkFBRCxFQUE4QixNQUFJO0FBQ3RDQSxJQUFBQSxRQUFRLENBQUMsd0JBQUQsRUFBMEIsTUFBSTtBQUNsQ0MsTUFBQUEsRUFBRSxDQUFDLG9DQUFELEVBQXVDQyxJQUFELElBQVE7QUFDNUNQLFFBQUFBLElBQUksQ0FBQ1EsT0FBTCxDQUFhTCxHQUFiLEVBQ0NNLEdBREQsQ0FDSyxtQkFETCxFQUVDQyxHQUZELENBRUssQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEtBQVc7QUFDWixjQUFHRCxHQUFILEVBQVFKLElBQUksQ0FBQ0ksR0FBRCxDQUFKLENBQ1BFLE1BRE8sQ0FDQUQsR0FEQSxFQUNLRSxFQURMLENBQ1FDLElBRFIsQ0FDYUMsTUFEYixDQUNvQixHQURwQixFQUVQSCxNQUZPLENBRUFELEdBQUcsQ0FBQ0ssSUFGSixFQUVVSCxFQUZWLENBRWFJLEVBRmIsQ0FFZ0JDLEVBRmhCLENBRW1CLE9BRm5CO0FBR1JaLFVBQUFBLElBQUk7QUFDUCxTQVBEO0FBUUgsT0FUQyxDQUFGO0FBVUgsS0FYTyxDQUFSO0FBWUgsR0FiTyxDQWJSO0FBMkJILENBNUJPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hlbGxvL0Rlc2t0b3AvS2VudGthcnQvc3VydmV5QXBpL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2hhaSA9IHJlcXVpcmUoJ2NoYWknKVxuY29uc3QgY2hhaUh0dHAgPSByZXF1aXJlKCdjaGFpLWh0dHAnKVxuY29uc3QgYXBwID0gcmVxdWlyZSgnLi4vYXBwJylcblxuY2hhaS51c2UoY2hhaUh0dHApXG5cbmRlc2NyaWJlKCd1c2VycycsICgpPT57XG4gICAgZGVzY3JpYmUoJ0dFVCAvdXNlcnMnLCgpPT5cbiAgICB7XG4gICAgICAgIGl0KCdVc2VycyBkb251Y2VrJywoZG9uZSk9PntcbiAgICAgICAgICAgIGNoYWkucmVxdWVzdChhcHApXG4gICAgICAgICAgICAuZ2V0KCcvdXNlcnMnKVxuICAgICAgICAgICAgLmVuZCgoZXJyLHJlcyk9PntcbiAgICAgICAgICAgICAgICBpZihlcnIpIGRvbmUoZXJyKVxuICAgICAgICAgICAgICAgIC5leHBlY3QocmVzKS50by5oYXZlLnN0YXR1cygyMDApXG4gICAgICAgICAgICAgICAgLmV4cGVjdChyZXMuYm9keSkudG8uYmUuYW4oJ2FycmF5JylcbiAgICAgICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgICB9KSAgIFxuICAgICAgICB9KVxuICAgIH0pLFxuICAgIGRlc2NyaWJlKCdBbmtldCBTb3J1bGFyaW5pIExpc3RlbGVuZScsKCk9PntcbiAgICAgICAgZGVzY3JpYmUoJ0dFVCAgL3N1cnZleS9xdWVzdGlvbnMnLCgpPT57XG4gICAgICAgICAgICBpdCgnU29ydWxhciB2ZSBjZXZhcCBzaWtsYXJpIGNla2lsaWNlaycsKGRvbmUpPT57XG4gICAgICAgICAgICAgICAgY2hhaS5yZXF1ZXN0KGFwcClcbiAgICAgICAgICAgICAgICAuZ2V0KCcvc3VydmV5L3F1ZXN0aW9ucycpXG4gICAgICAgICAgICAgICAgLmVuZCgoZXJyLHJlcyk9PntcbiAgICAgICAgICAgICAgICAgICAgaWYoZXJyKSBkb25lKGVycilcbiAgICAgICAgICAgICAgICAgICAgLmV4cGVjdChyZXMpLnRvLmhhdmUuc3RhdHVzKDIwMClcbiAgICAgICAgICAgICAgICAgICAgLmV4cGVjdChyZXMuYm9keSkudG8uYmUuYW4oJ2FycmF5JylcbiAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH0pXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "chai",
        "require",
        "chaiHttp",
        "app",
        "use",
        "describe",
        "it",
        "done",
        "request",
        "get",
        "end",
        "err",
        "res",
        "expect",
        "to",
        "have",
        "status",
        "body",
        "be",
        "an"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAnB;;AAEAD,IAAI,CAACI,GAAL,CAASF,QAAT;AAEAG,QAAQ,CAAC,OAAD,EAAU,MAAI;AAClBA,EAAAA,QAAQ,CAAC,YAAD,EAAc,MACtB;AACIC,IAAAA,EAAE,CAAC,eAAD,EAAkBC,IAAD,IAAQ;AACvBP,MAAAA,IAAI,CAACQ,OAAL,CAAaL,GAAb,EACCM,GADD,CACK,QADL,EAECC,GAFD,CAEK,CAACC,GAAD,EAAKC,GAAL,KAAW;AACZ,YAAGD,GAAH,EAAQJ,IAAI,CAACI,GAAD,CAAJ,CACPE,MADO,CACAD,GADA,EACKE,EADL,CACQC,IADR,CACaC,MADb,CACoB,GADpB,EAEPH,MAFO,CAEAD,GAAG,CAACK,IAFJ,EAEUH,EAFV,CAEaI,EAFb,CAEgBC,EAFhB,CAEmB,OAFnB;AAGRZ,QAAAA,IAAI;AACP,OAPD;AAQH,KATC,CAAF;AAUH,GAZO,CAAR,EAaAF,QAAQ,CAAC,4BAAD,EAA8B,MAAI;AACtCA,IAAAA,QAAQ,CAAC,wBAAD,EAA0B,MAAI;AAClCC,MAAAA,EAAE,CAAC,oCAAD,EAAuCC,IAAD,IAAQ;AAC5CP,QAAAA,IAAI,CAACQ,OAAL,CAAaL,GAAb,EACCM,GADD,CACK,mBADL,EAECC,GAFD,CAEK,CAACC,GAAD,EAAKC,GAAL,KAAW;AACZ,cAAGD,GAAH,EAAQJ,IAAI,CAACI,GAAD,CAAJ,CACPE,MADO,CACAD,GADA,EACKE,EADL,CACQC,IADR,CACaC,MADb,CACoB,GADpB,EAEPH,MAFO,CAEAD,GAAG,CAACK,IAFJ,EAEUH,EAFV,CAEaI,EAFb,CAEgBC,EAFhB,CAEmB,OAFnB;AAGRZ,UAAAA,IAAI;AACP,SAPD;AAQH,OATC,CAAF;AAUH,KAXO,CAAR;AAYH,GAbO,CAbR;AA2BH,CA5BO,CAAR",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/test/",
      "sourcesContent": [
        "const chai = require('chai')\nconst chaiHttp = require('chai-http')\nconst app = require('../app')\n\nchai.use(chaiHttp)\n\ndescribe('users', ()=>{\n    describe('GET /users',()=>\n    {\n        it('Users donucek',(done)=>{\n            chai.request(app)\n            .get('/users')\n            .end((err,res)=>{\n                if(err) done(err)\n                .expect(res).to.have.status(200)\n                .expect(res.body).to.be.an('array')\n                done();\n            })   \n        })\n    }),\n    describe('Anket Sorularini Listelene',()=>{\n        describe('GET  /survey/questions',()=>{\n            it('Sorular ve cevap siklari cekilicek',(done)=>{\n                chai.request(app)\n                .get('/survey/questions')\n                .end((err,res)=>{\n                    if(err) done(err)\n                    .expect(res).to.have.status(200)\n                    .expect(res.body).to.be.an('array')\n                    done();\n                })\n            })\n        })\n    })\n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1601900870564
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "var createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\n\nvar surveyRouter = require('./routes/survey');\n\nvar usersRouter = require('./routes/users');\n\nvar app = express(); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/', indexRouter);\napp.use('/survey', surveyRouter);\napp.use('/users', usersRouter); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsImluZGV4Um91dGVyIiwic3VydmV5Um91dGVyIiwidXNlcnNSb3V0ZXIiLCJhcHAiLCJzZXQiLCJqb2luIiwiX19kaXJuYW1lIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInN0YXRpYyIsInJlcSIsInJlcyIsIm5leHQiLCJlcnIiLCJsb2NhbHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJnZXQiLCJzdGF0dXMiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXpCOztBQUNBLElBQUlDLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJRyxZQUFZLEdBQUdILE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUNBLElBQUlJLE1BQU0sR0FBR0osT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsSUFBSUssV0FBVyxHQUFHTCxPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBQ0EsSUFBSU0sWUFBWSxHQUFHTixPQUFPLENBQUMsaUJBQUQsQ0FBMUI7O0FBQ0EsSUFBSU8sV0FBVyxHQUFHUCxPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBRUEsSUFBSVEsR0FBRyxHQUFHUCxPQUFPLEVBQWpCLEMsQ0FFQTs7QUFDQU8sR0FBRyxDQUFDQyxHQUFKLENBQVEsT0FBUixFQUFpQlAsSUFBSSxDQUFDUSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckIsQ0FBakI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QixNQUF2QjtBQUVBRCxHQUFHLENBQUNJLEdBQUosQ0FBUVIsTUFBTSxDQUFDLEtBQUQsQ0FBZDtBQUNBSSxHQUFHLENBQUNJLEdBQUosQ0FBUVgsT0FBTyxDQUFDWSxJQUFSLEVBQVI7QUFDQUwsR0FBRyxDQUFDSSxHQUFKLENBQVFYLE9BQU8sQ0FBQ2EsVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQUFSO0FBQ0FQLEdBQUcsQ0FBQ0ksR0FBSixDQUFRVCxZQUFZLEVBQXBCO0FBQ0FLLEdBQUcsQ0FBQ0ksR0FBSixDQUFRWCxPQUFPLENBQUNlLE1BQVIsQ0FBZWQsSUFBSSxDQUFDUSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsUUFBckIsQ0FBZixDQUFSO0FBRUFILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLEdBQVIsRUFBYVAsV0FBYjtBQUNBRyxHQUFHLENBQUNJLEdBQUosQ0FBUSxTQUFSLEVBQW1CTixZQUFuQjtBQUNBRSxHQUFHLENBQUNJLEdBQUosQ0FBUSxRQUFSLEVBQWtCTCxXQUFsQixFLENBRUE7O0FBQ0FDLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNLLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDL0JBLEVBQUFBLElBQUksQ0FBQ3BCLFdBQVcsQ0FBQyxHQUFELENBQVosQ0FBSjtBQUNELENBRkQsRSxDQUlBOztBQUNBUyxHQUFHLENBQUNJLEdBQUosQ0FBUSxVQUFTUSxHQUFULEVBQWNILEdBQWQsRUFBbUJDLEdBQW5CLEVBQXdCQyxJQUF4QixFQUE4QjtBQUNwQztBQUNBRCxFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0MsT0FBWCxHQUFxQkYsR0FBRyxDQUFDRSxPQUF6QjtBQUNBSixFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0UsS0FBWCxHQUFtQk4sR0FBRyxDQUFDVCxHQUFKLENBQVFnQixHQUFSLENBQVksS0FBWixNQUF1QixhQUF2QixHQUF1Q0osR0FBdkMsR0FBNkMsRUFBaEUsQ0FIb0MsQ0FLcEM7O0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXTCxHQUFHLENBQUNLLE1BQUosSUFBYyxHQUF6QjtBQUNBUCxFQUFBQSxHQUFHLENBQUNRLE1BQUosQ0FBVyxPQUFYO0FBQ0QsQ0FSRDtBQVVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixHQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGVsbG8vRGVza3RvcC9LZW50a2FydC9zdXJ2ZXlBcGkvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnaHR0cC1lcnJvcnMnKTtcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpO1xudmFyIGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xuXG52YXIgaW5kZXhSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9pbmRleCcpO1xudmFyIHN1cnZleVJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL3N1cnZleScpO1xudmFyIHVzZXJzUm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcnMnKTtcblxudmFyIGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gdmlldyBlbmdpbmUgc2V0dXBcbmFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzJykpO1xuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnamFkZScpO1xuXG5hcHAudXNlKGxvZ2dlcignZGV2JykpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycpKSk7XG5cbmFwcC51c2UoJy8nLCBpbmRleFJvdXRlcik7XG5hcHAudXNlKCcvc3VydmV5Jywgc3VydmV5Um91dGVyKTtcbmFwcC51c2UoJy91c2VycycsIHVzZXJzUm91dGVyKTtcblxuLy8gY2F0Y2ggNDA0IGFuZCBmb3J3YXJkIHRvIGVycm9yIGhhbmRsZXJcbmFwcC51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgbmV4dChjcmVhdGVFcnJvcig0MDQpKTtcbn0pO1xuXG4vLyBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgLy8gc2V0IGxvY2Fscywgb25seSBwcm92aWRpbmcgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcbiAgcmVzLmxvY2Fscy5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XG4gIHJlcy5sb2NhbHMuZXJyb3IgPSByZXEuYXBwLmdldCgnZW52JykgPT09ICdkZXZlbG9wbWVudCcgPyBlcnIgOiB7fTtcblxuICAvLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcbiAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XG4gIHJlcy5yZW5kZXIoJ2Vycm9yJyk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "indexRouter",
        "surveyRouter",
        "usersRouter",
        "app",
        "set",
        "join",
        "__dirname",
        "use",
        "json",
        "urlencoded",
        "extended",
        "static",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIK,WAAW,GAAGL,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,iBAAD,CAA1B;;AACA,IAAIO,WAAW,GAAGP,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAIQ,GAAG,GAAGP,OAAO,EAAjB,C,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBP,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AAEAD,GAAG,CAACI,GAAJ,CAAQR,MAAM,CAAC,KAAD,CAAd;AACAI,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACY,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACa,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQT,YAAY,EAApB;AACAK,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACe,MAAR,CAAed,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaP,WAAb;AACAG,GAAG,CAACI,GAAJ,CAAQ,SAAR,EAAmBN,YAAnB;AACAE,GAAG,CAACI,GAAJ,CAAQ,QAAR,EAAkBL,WAAlB,E,CAEA;;AACAC,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACpB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAS,GAAG,CAACI,GAAJ,CAAQ,UAASQ,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACT,GAAJ,CAAQgB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiBpB,GAAjB",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/",
      "sourcesContent": [
        "var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\nvar surveyRouter = require('./routes/survey');\nvar usersRouter = require('./routes/users');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/survey', surveyRouter);\napp.use('/users', usersRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601890009753
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  res.render('index', {\n    title: 'Express'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiO0FBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFwQjtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGVsbG8vRGVza3RvcC9LZW50a2FydC9zdXJ2ZXlBcGkvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8qIEdFVCBob21lIHBhZ2UuICovXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnJlbmRlcignaW5kZXgnLCB7IHRpdGxlOiAnRXhwcmVzcycgfSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601886528404
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/survey.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/survey.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/routes/survey.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/survey.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
        "sourceFileName": "survey.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nconst {\n  database\n} = require('../config/helpers');\n/* GET users listing. */\n\n\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\nrouter.get('/questions', (req, res) => {\n  database.query('select q.surveyQuestion,a.answer from survey q join surveyAnswers a on q.id = a.QuestionId  ').then(result => {\n    res.status(200).send(result);\n  }).catch(err => {\n    res.status(300).send('Something went wrong !!');\n  });\n});\nrouter.get('/getAllAnswer', (req, res) => {\n  database.query('select u.username,a.surveyUserId ,q.surveyQuestion ,sa.answer from answers a  join users u on a.userId = u.id   join surveyAnswers sa on a.answerId = sa.id join survey q on a.questionId = q.id ').then(result => {\n    res.send(result);\n  }).catch(err => {\n    res.status(300).send('Something went wrong !!');\n  });\n});\nrouter.post('/new', (req, res) => {\n  let survey = req.body;\n  let surveyQuestion = survey.question;\n  let answers = [];\n  survey.answers.forEach(element => {\n    answers.push(element);\n  });\n  database.query(`insert into survey (surveyQuestion) values (\"${surveyQuestion}\")`).then(result => {\n    questionId = result.insertId;\n    answers.forEach(item => {\n      database.query(`insert into surveyAnswers (questionId,answer) values (${questionId},\"${item}\")`);\n    });\n  }).catch(err => console.log(err));\n  res.status(200).send('Istek basarili');\n});\nrouter.post('/finalAnswer', (req, res) => {\n  let result = req.body.results;\n  let userId = req.body.userId;\n  let surveyUserId = req.body.surveyUserId;\n  result.forEach(item => {\n    database.query(`insert into answers (questionId,answerId,userId,surveyUserId) values (${item.questionId},${item.answerId},${userId},${surveyUserId})`).then(e => console.log('inserted')).catch(err => console.log(err));\n  });\n  res.send(\"complete\");\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1cnZleS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImRhdGFiYXNlIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInNlbmQiLCJxdWVyeSIsInRoZW4iLCJyZXN1bHQiLCJzdGF0dXMiLCJjYXRjaCIsImVyciIsInBvc3QiLCJzdXJ2ZXkiLCJib2R5Iiwic3VydmV5UXVlc3Rpb24iLCJxdWVzdGlvbiIsImFuc3dlcnMiLCJmb3JFYWNoIiwiZWxlbWVudCIsInB1c2giLCJxdWVzdGlvbklkIiwiaW5zZXJ0SWQiLCJpdGVtIiwiY29uc29sZSIsImxvZyIsInJlc3VsdHMiLCJ1c2VySWQiLCJzdXJ2ZXlVc2VySWQiLCJhbnN3ZXJJZCIsImUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQWVILE9BQU8sQ0FBQyxtQkFBRCxDQUE1QjtBQUNBOzs7QUFDQUMsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0JDLElBQXBCLEVBQTBCO0FBQ3hDRCxFQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBUyx5QkFBVDtBQUNELENBRkQ7QUFLQVAsTUFBTSxDQUFDRyxHQUFQLENBQVcsWUFBWCxFQUF3QixDQUFDQyxHQUFELEVBQUtDLEdBQUwsS0FBWTtBQUNsQ0gsRUFBQUEsUUFBUSxDQUFDTSxLQUFULENBQWUsOEZBQWYsRUFBK0dDLElBQS9HLENBQ0VDLE1BQU0sSUFDTjtBQUNFTCxJQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCSixJQUFoQixDQUFxQkcsTUFBckI7QUFDRCxHQUpILEVBSUtFLEtBSkwsQ0FLSUMsR0FBRyxJQUNMO0FBQ0VSLElBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JKLElBQWhCLENBQXFCLHlCQUFyQjtBQUNELEdBUkg7QUFTRCxDQVZEO0FBWUFQLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLGVBQVgsRUFBMkIsQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEtBQVc7QUFDcENILEVBQUFBLFFBQVEsQ0FBQ00sS0FBVCxDQUFlLG1NQUFmLEVBQ0NDLElBREQsQ0FDTUMsTUFBTSxJQUFHO0FBQ1hMLElBQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTRyxNQUFUO0FBRUgsR0FKRCxFQUlHRSxLQUpILENBS0VDLEdBQUcsSUFDTDtBQUNFUixJQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCSixJQUFoQixDQUFxQix5QkFBckI7QUFDRCxHQVJEO0FBU0QsQ0FWRDtBQVlBUCxNQUFNLENBQUNjLElBQVAsQ0FBWSxNQUFaLEVBQW9CLENBQUNWLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ2hDLE1BQUlVLE1BQU0sR0FBR1gsR0FBRyxDQUFDWSxJQUFqQjtBQUNBLE1BQUlDLGNBQWMsR0FBR0YsTUFBTSxDQUFDRyxRQUE1QjtBQUNBLE1BQUlDLE9BQU8sR0FBRyxFQUFkO0FBQ0FKLEVBQUFBLE1BQU0sQ0FBQ0ksT0FBUCxDQUFlQyxPQUFmLENBQXVCQyxPQUFPLElBQUk7QUFDaENGLElBQUFBLE9BQU8sQ0FBQ0csSUFBUixDQUFhRCxPQUFiO0FBQ0QsR0FGRDtBQUlBbkIsRUFBQUEsUUFBUSxDQUFDTSxLQUFULENBQWdCLGdEQUErQ1MsY0FBZSxJQUE5RSxFQUNHUixJQURILENBQ1FDLE1BQU0sSUFBSTtBQUNkYSxJQUFBQSxVQUFVLEdBQUdiLE1BQU0sQ0FBQ2MsUUFBcEI7QUFDQUwsSUFBQUEsT0FBTyxDQUFDQyxPQUFSLENBQWdCSyxJQUFJLElBQUk7QUFDdEJ2QixNQUFBQSxRQUFRLENBQUNNLEtBQVQsQ0FBZ0IseURBQXdEZSxVQUFXLEtBQUlFLElBQUssSUFBNUY7QUFFRCxLQUhEO0FBSUQsR0FQSCxFQU9LYixLQVBMLENBT1dDLEdBQUcsSUFBSWEsT0FBTyxDQUFDQyxHQUFSLENBQVlkLEdBQVosQ0FQbEI7QUFRQVIsRUFBQUEsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkosSUFBaEIsQ0FBcUIsZ0JBQXJCO0FBRUQsQ0FsQkQ7QUFvQkFQLE1BQU0sQ0FBQ2MsSUFBUCxDQUFZLGNBQVosRUFBNEIsQ0FBQ1YsR0FBRCxFQUFLQyxHQUFMLEtBQzVCO0FBQ0UsTUFBSUssTUFBTSxHQUFJTixHQUFHLENBQUNZLElBQUosQ0FBU1ksT0FBdkI7QUFDQSxNQUFJQyxNQUFNLEdBQUd6QixHQUFHLENBQUNZLElBQUosQ0FBU2EsTUFBdEI7QUFDQSxNQUFJQyxZQUFZLEdBQUcxQixHQUFHLENBQUNZLElBQUosQ0FBU2MsWUFBNUI7QUFHQXBCLEVBQUFBLE1BQU0sQ0FBQ1UsT0FBUCxDQUFlSyxJQUFJLElBQ25CO0FBQ0l2QixJQUFBQSxRQUFRLENBQUNNLEtBQVQsQ0FBZ0IseUVBQXdFaUIsSUFBSSxDQUFDRixVQUFXLElBQUdFLElBQUksQ0FBQ00sUUFBUyxJQUFHRixNQUFPLElBQUdDLFlBQWEsR0FBbkosRUFDQ3JCLElBREQsQ0FDTXVCLENBQUMsSUFBSU4sT0FBTyxDQUFDQyxHQUFSLENBQVksVUFBWixDQURYLEVBRUNmLEtBRkQsQ0FFT0MsR0FBRyxJQUFJYSxPQUFPLENBQUNDLEdBQVIsQ0FBWWQsR0FBWixDQUZkO0FBR0gsR0FMRDtBQU1BUixFQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBUyxVQUFUO0FBQ0QsQ0FkRDtBQWtCQTBCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxDLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9oZWxsby9EZXNrdG9wL0tlbnRrYXJ0L3N1cnZleUFwaS9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IHsgZGF0YWJhc2UgfSA9IHJlcXVpcmUoJy4uL2NvbmZpZy9oZWxwZXJzJylcbi8qIEdFVCB1c2VycyBsaXN0aW5nLiAqL1xucm91dGVyLmdldCgnLycsIGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xuICByZXMuc2VuZCgncmVzcG9uZCB3aXRoIGEgcmVzb3VyY2UnKTtcbn0pO1xuXG5cbnJvdXRlci5nZXQoJy9xdWVzdGlvbnMnLChyZXEscmVzKSA9PntcbiAgZGF0YWJhc2UucXVlcnkoJ3NlbGVjdCBxLnN1cnZleVF1ZXN0aW9uLGEuYW5zd2VyIGZyb20gc3VydmV5IHEgam9pbiBzdXJ2ZXlBbnN3ZXJzIGEgb24gcS5pZCA9IGEuUXVlc3Rpb25JZCAgJykudGhlbihcbiAgICByZXN1bHQgPT4gXG4gICAge1xuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQocmVzdWx0KVxuICAgIH0pLmNhdGNoKFxuICAgICAgZXJyID0+IFxuICAgIHtcbiAgICAgIHJlcy5zdGF0dXMoMzAwKS5zZW5kKCdTb21ldGhpbmcgd2VudCB3cm9uZyAhIScpXG4gICAgfSlcbn0pXG5cbnJvdXRlci5nZXQoJy9nZXRBbGxBbnN3ZXInLChyZXEscmVzKT0+e1xuICBkYXRhYmFzZS5xdWVyeSgnc2VsZWN0IHUudXNlcm5hbWUsYS5zdXJ2ZXlVc2VySWQgLHEuc3VydmV5UXVlc3Rpb24gLHNhLmFuc3dlciBmcm9tIGFuc3dlcnMgYSAgam9pbiB1c2VycyB1IG9uIGEudXNlcklkID0gdS5pZCAgIGpvaW4gc3VydmV5QW5zd2VycyBzYSBvbiBhLmFuc3dlcklkID0gc2EuaWQgam9pbiBzdXJ2ZXkgcSBvbiBhLnF1ZXN0aW9uSWQgPSBxLmlkICcpXG4gIC50aGVuKHJlc3VsdCA9PnsgIFxuICAgICAgcmVzLnNlbmQocmVzdWx0KVxuICAgIFxuICB9KS5jYXRjaChcbiAgICBlcnIgPT4gXG4gIHtcbiAgICByZXMuc3RhdHVzKDMwMCkuc2VuZCgnU29tZXRoaW5nIHdlbnQgd3JvbmcgISEnKVxuICB9KVxufSlcblxucm91dGVyLnBvc3QoJy9uZXcnLCAocmVxLCByZXMpID0+IHsgXG4gIGxldCBzdXJ2ZXkgPSByZXEuYm9keTtcbiAgbGV0IHN1cnZleVF1ZXN0aW9uID0gc3VydmV5LnF1ZXN0aW9uO1xuICBsZXQgYW5zd2VycyA9IFtdXG4gIHN1cnZleS5hbnN3ZXJzLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgYW5zd2Vycy5wdXNoKGVsZW1lbnQpO1xuICB9KTtcbiAgXG4gIGRhdGFiYXNlLnF1ZXJ5KGBpbnNlcnQgaW50byBzdXJ2ZXkgKHN1cnZleVF1ZXN0aW9uKSB2YWx1ZXMgKFwiJHtzdXJ2ZXlRdWVzdGlvbn1cIilgKVxuICAgIC50aGVuKHJlc3VsdCA9PiB7XG4gICAgICBxdWVzdGlvbklkID0gcmVzdWx0Lmluc2VydElkO1xuICAgICAgYW5zd2Vycy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICBkYXRhYmFzZS5xdWVyeShgaW5zZXJ0IGludG8gc3VydmV5QW5zd2VycyAocXVlc3Rpb25JZCxhbnN3ZXIpIHZhbHVlcyAoJHtxdWVzdGlvbklkfSxcIiR7aXRlbX1cIilgKVxuXG4gICAgICB9KVxuICAgIH0pLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKVxuICByZXMuc3RhdHVzKDIwMCkuc2VuZCgnSXN0ZWsgYmFzYXJpbGknKTtcblxufSlcblxucm91dGVyLnBvc3QoJy9maW5hbEFuc3dlcicsIChyZXEscmVzKSA9Plxue1xuICBsZXQgcmVzdWx0ICA9IHJlcS5ib2R5LnJlc3VsdHM7XG4gIGxldCB1c2VySWQgPSByZXEuYm9keS51c2VySWQ7XG4gIGxldCBzdXJ2ZXlVc2VySWQgPSByZXEuYm9keS5zdXJ2ZXlVc2VySWQ7XG5cblxuICByZXN1bHQuZm9yRWFjaChpdGVtID0+XG4gIHtcbiAgICAgIGRhdGFiYXNlLnF1ZXJ5KGBpbnNlcnQgaW50byBhbnN3ZXJzIChxdWVzdGlvbklkLGFuc3dlcklkLHVzZXJJZCxzdXJ2ZXlVc2VySWQpIHZhbHVlcyAoJHtpdGVtLnF1ZXN0aW9uSWR9LCR7aXRlbS5hbnN3ZXJJZH0sJHt1c2VySWR9LCR7c3VydmV5VXNlcklkfSlgKVxuICAgICAgLnRoZW4oZSA9PiBjb25zb2xlLmxvZygnaW5zZXJ0ZWQnKSlcbiAgICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XG4gIH0pXG4gIHJlcy5zZW5kKFwiY29tcGxldGVcIilcbn0pXG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "survey.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "database",
        "get",
        "req",
        "res",
        "next",
        "send",
        "query",
        "then",
        "result",
        "status",
        "catch",
        "err",
        "post",
        "survey",
        "body",
        "surveyQuestion",
        "question",
        "answers",
        "forEach",
        "element",
        "push",
        "questionId",
        "insertId",
        "item",
        "console",
        "log",
        "results",
        "userId",
        "surveyUserId",
        "answerId",
        "e",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\nconst { database } = require('../config/helpers')\n/* GET users listing. */\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\n\n\nrouter.get('/questions',(req,res) =>{\n  database.query('select q.surveyQuestion,a.answer from survey q join surveyAnswers a on q.id = a.QuestionId  ').then(\n    result => \n    {\n      res.status(200).send(result)\n    }).catch(\n      err => \n    {\n      res.status(300).send('Something went wrong !!')\n    })\n})\n\nrouter.get('/getAllAnswer',(req,res)=>{\n  database.query('select u.username,a.surveyUserId ,q.surveyQuestion ,sa.answer from answers a  join users u on a.userId = u.id   join surveyAnswers sa on a.answerId = sa.id join survey q on a.questionId = q.id ')\n  .then(result =>{  \n      res.send(result)\n    \n  }).catch(\n    err => \n  {\n    res.status(300).send('Something went wrong !!')\n  })\n})\n\nrouter.post('/new', (req, res) => { \n  let survey = req.body;\n  let surveyQuestion = survey.question;\n  let answers = []\n  survey.answers.forEach(element => {\n    answers.push(element);\n  });\n  \n  database.query(`insert into survey (surveyQuestion) values (\"${surveyQuestion}\")`)\n    .then(result => {\n      questionId = result.insertId;\n      answers.forEach(item => {\n        database.query(`insert into surveyAnswers (questionId,answer) values (${questionId},\"${item}\")`)\n\n      })\n    }).catch(err => console.log(err))\n  res.status(200).send('Istek basarili');\n\n})\n\nrouter.post('/finalAnswer', (req,res) =>\n{\n  let result  = req.body.results;\n  let userId = req.body.userId;\n  let surveyUserId = req.body.surveyUserId;\n\n\n  result.forEach(item =>\n  {\n      database.query(`insert into answers (questionId,answerId,userId,surveyUserId) values (${item.questionId},${item.answerId},${userId},${surveyUserId})`)\n      .then(e => console.log('inserted'))\n      .catch(err => console.log(err));\n  })\n  res.send(\"complete\")\n})\n\n\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601900025548
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/config/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/config/helpers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/config/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/config/helpers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/config/helpers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/config/helpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/config/",
        "sourceFileName": "helpers.js"
      }
    },
    "ast": null,
    "code": "const mysqli = require('mysqli');\n\nlet conn = new mysqli({\n  host: 'localhost',\n  post: 3306,\n  user: 'root',\n  passwd: '',\n  charset: 'utf8_general_ci',\n  db: 'survey'\n});\nlet db = conn.emit(false, '');\nmodule.exports = {\n  database: db\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsibXlzcWxpIiwicmVxdWlyZSIsImNvbm4iLCJob3N0IiwicG9zdCIsInVzZXIiLCJwYXNzd2QiLCJjaGFyc2V0IiwiZGIiLCJlbWl0IiwibW9kdWxlIiwiZXhwb3J0cyIsImRhdGFiYXNlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUVBLElBQUlDLElBQUksR0FBRSxJQUFJRixNQUFKLENBQ047QUFDSUcsRUFBQUEsSUFBSSxFQUFFLFdBRFY7QUFFSUMsRUFBQUEsSUFBSSxFQUFFLElBRlY7QUFHSUMsRUFBQUEsSUFBSSxFQUFFLE1BSFY7QUFJSUMsRUFBQUEsTUFBTSxFQUFFLEVBSlo7QUFLSUMsRUFBQUEsT0FBTyxFQUFFLGlCQUxiO0FBTUlDLEVBQUFBLEVBQUUsRUFBRTtBQU5SLENBRE0sQ0FBVjtBQVdBLElBQUlBLEVBQUUsR0FBR04sSUFBSSxDQUFDTyxJQUFMLENBQVUsS0FBVixFQUFnQixFQUFoQixDQUFUO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxRQUFRLEVBQUNKO0FBREksQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hlbGxvL0Rlc2t0b3AvS2VudGthcnQvc3VydmV5QXBpL2NvbmZpZy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBteXNxbGkgPSByZXF1aXJlKCdteXNxbGknKVxuXG5sZXQgY29ubiA9bmV3IG15c3FsaShcbiAgICB7XG4gICAgICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgICAgICBwb3N0OiAzMzA2LCAgXG4gICAgICAgIHVzZXI6ICdyb290JywgIFxuICAgICAgICBwYXNzd2Q6ICcnLCAgXG4gICAgICAgIGNoYXJzZXQ6ICd1dGY4X2dlbmVyYWxfY2knLCAgXG4gICAgICAgIGRiOiAnc3VydmV5J1xuICAgICAgfVxuKVxuXG5sZXQgZGIgPSBjb25uLmVtaXQoZmFsc2UsJycpO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZGF0YWJhc2U6ZGJcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "helpers.js"
      ],
      "names": [
        "mysqli",
        "require",
        "conn",
        "host",
        "post",
        "user",
        "passwd",
        "charset",
        "db",
        "emit",
        "module",
        "exports",
        "database"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAIC,IAAI,GAAE,IAAIF,MAAJ,CACN;AACIG,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,IAAI,EAAE,IAFV;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,MAAM,EAAE,EAJZ;AAKIC,EAAAA,OAAO,EAAE,iBALb;AAMIC,EAAAA,EAAE,EAAE;AANR,CADM,CAAV;AAWA,IAAIA,EAAE,GAAGN,IAAI,CAACO,IAAL,CAAU,KAAV,EAAgB,EAAhB,CAAT;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,QAAQ,EAACJ;AADI,CAAjB",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/config/",
      "sourcesContent": [
        "const mysqli = require('mysqli')\n\nlet conn =new mysqli(\n    {\n        host: 'localhost',\n        post: 3306,  \n        user: 'root',  \n        passwd: '',  \n        charset: 'utf8_general_ci',  \n        db: 'survey'\n      }\n)\n\nlet db = conn.emit(false,'');\nmodule.exports = {\n    database:db\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1601887587143
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/users.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/users.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/routes/users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nconst {\n  database\n} = require('../config/helpers');\n/* GET home page. */\n\n\nrouter.get('/', function (req, res, next) {\n  database.query('select * from users where authority != 1').then(result => {\n    res.send(result);\n  }).catch(err => {\n    res.status(300).send('Something went wrong !!');\n  });\n});\nrouter.post('/register', function (req, res, next) {\n  let user = req.body;\n\n  if (user.username) {\n    database.query(`insert into users (username) values (\"${user.username}\")`).then(result => {\n      if (result) {\n        res.status(200).send('Kayit basarili');\n      }\n    }).catch(err => console.log(err));\n  } else res.send('Failed');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZGF0YWJhc2UiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwicXVlcnkiLCJ0aGVuIiwicmVzdWx0Iiwic2VuZCIsImNhdGNoIiwiZXJyIiwic3RhdHVzIiwicG9zdCIsInVzZXIiLCJib2R5IiwidXNlcm5hbWUiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiOztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFlSCxPQUFPLENBQUMsbUJBQUQsQ0FBNUI7QUFDQTs7O0FBQ0FDLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUVyQ0osRUFBQUEsUUFBUSxDQUFDSyxLQUFULENBQWUsMENBQWYsRUFBMkRDLElBQTNELENBQWdFQyxNQUFNLElBQUk7QUFDdEVKLElBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRCxNQUFUO0FBQ0gsR0FGRCxFQUVHRSxLQUZILENBRVNDLEdBQUcsSUFBSTtBQUNaUCxJQUFBQSxHQUFHLENBQUNRLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQix5QkFBckI7QUFDSCxHQUpEO0FBTUgsQ0FSRDtBQVVBVixNQUFNLENBQUNjLElBQVAsQ0FBWSxXQUFaLEVBQXlCLFVBQVNWLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDOUMsTUFBSVMsSUFBSSxHQUFHWCxHQUFHLENBQUNZLElBQWY7O0FBQ0EsTUFBR0QsSUFBSSxDQUFDRSxRQUFSLEVBQ0E7QUFDSWYsSUFBQUEsUUFBUSxDQUFDSyxLQUFULENBQWdCLHlDQUF3Q1EsSUFBSSxDQUFDRSxRQUFTLElBQXRFLEVBQ0NULElBREQsQ0FDTUMsTUFBTSxJQUFJO0FBQ1osVUFBR0EsTUFBSCxFQUNBO0FBQ0lKLFFBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCLGdCQUFyQjtBQUNIO0FBQ0osS0FORCxFQU1HQyxLQU5ILENBTVNDLEdBQUcsSUFBSU0sT0FBTyxDQUFDQyxHQUFSLENBQVlQLEdBQVosQ0FOaEI7QUFPSCxHQVRELE1BVUFQLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFFBQVQ7QUFHSCxDQWZEO0FBa0JBVSxNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGVsbG8vRGVza3RvcC9LZW50a2FydC9zdXJ2ZXlBcGkvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7IFxuY29uc3QgeyBkYXRhYmFzZSB9ID0gcmVxdWlyZSgnLi4vY29uZmlnL2hlbHBlcnMnKVxuLyogR0VUIGhvbWUgcGFnZS4gKi9cbnJvdXRlci5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICBcbiAgICBkYXRhYmFzZS5xdWVyeSgnc2VsZWN0ICogZnJvbSB1c2VycyB3aGVyZSBhdXRob3JpdHkgIT0gMScpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgcmVzLnNlbmQocmVzdWx0KVxuICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoMzAwKS5zZW5kKCdTb21ldGhpbmcgd2VudCB3cm9uZyAhIScpXG4gICAgfSlcbiAgICBcbn0pO1xuXG5yb3V0ZXIucG9zdCgnL3JlZ2lzdGVyJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgICBsZXQgdXNlciA9IHJlcS5ib2R5OyAgXG4gICAgaWYodXNlci51c2VybmFtZSlcbiAgICB7XG4gICAgICAgIGRhdGFiYXNlLnF1ZXJ5KGBpbnNlcnQgaW50byB1c2VycyAodXNlcm5hbWUpIHZhbHVlcyAoXCIke3VzZXIudXNlcm5hbWV9XCIpYClcbiAgICAgICAgLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIGlmKHJlc3VsdClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZCgnS2F5aXQgYmFzYXJpbGknKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KS5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcbiAgICB9ZWxzZVxuICAgIHJlcy5zZW5kKCdGYWlsZWQnKVxuICAgIFxuICAgIFxufSk7XG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "database",
        "get",
        "req",
        "res",
        "next",
        "query",
        "then",
        "result",
        "send",
        "catch",
        "err",
        "status",
        "post",
        "user",
        "body",
        "username",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeH,OAAO,CAAC,mBAAD,CAA5B;AACA;;;AACAC,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAErCJ,EAAAA,QAAQ,CAACK,KAAT,CAAe,0CAAf,EAA2DC,IAA3D,CAAgEC,MAAM,IAAI;AACtEJ,IAAAA,GAAG,CAACK,IAAJ,CAASD,MAAT;AACH,GAFD,EAEGE,KAFH,CAESC,GAAG,IAAI;AACZP,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,yBAArB;AACH,GAJD;AAMH,CARD;AAUAV,MAAM,CAACc,IAAP,CAAY,WAAZ,EAAyB,UAASV,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9C,MAAIS,IAAI,GAAGX,GAAG,CAACY,IAAf;;AACA,MAAGD,IAAI,CAACE,QAAR,EACA;AACIf,IAAAA,QAAQ,CAACK,KAAT,CAAgB,yCAAwCQ,IAAI,CAACE,QAAS,IAAtE,EACCT,IADD,CACMC,MAAM,IAAI;AACZ,UAAGA,MAAH,EACA;AACIJ,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,gBAArB;AACH;AACJ,KAND,EAMGC,KANH,CAMSC,GAAG,IAAIM,OAAO,CAACC,GAAR,CAAYP,GAAZ,CANhB;AAOH,GATD,MAUAP,GAAG,CAACK,IAAJ,CAAS,QAAT;AAGH,CAfD;AAkBAU,MAAM,CAACC,OAAP,GAAiBrB,MAAjB",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router(); \nconst { database } = require('../config/helpers')\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  \n    database.query('select * from users where authority != 1').then(result => {\n        res.send(result)\n    }).catch(err => {\n        res.status(300).send('Something went wrong !!')\n    })\n    \n});\n\nrouter.post('/register', function(req, res, next) {\n    let user = req.body;  \n    if(user.username)\n    {\n        database.query(`insert into users (username) values (\"${user.username}\")`)\n        .then(result => {\n            if(result)\n            {\n                res.status(200).send('Kayit basarili')\n            }\n        }).catch(err => console.log(err))\n    }else\n    res.send('Failed')\n    \n    \n});\n\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601894129511
  }
}