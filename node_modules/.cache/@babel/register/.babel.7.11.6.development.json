{
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/test/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/test/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/test/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/test/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/test/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const chai = require('chai');\n\nconst chaiHttp = require('chai-http');\n\nconst app = require('../app');\n\nchai.use(chaiHttp);\ndescribe('users', () => {\n  describe('GET /users', () => {\n    it('Users donucek', done => {\n      chai.request(app).get('/api/users').end((err, res) => {\n        if (err) done(err).expect(res).to.have.status(200).expect(res.body).to.be.an('array');\n        done();\n      });\n    });\n  }), describe('Anket Sorularini Listelene', () => {\n    describe('GET  /survey/questions', () => {\n      it('Sorular ve cevap siklari cekilicek', done => {\n        chai.request(app).get('api/survey/questions').end((err, res) => {\n          if (err) done(err).expect(res).to.have.status(200).expect(res.body).to.be.an('array');\n          done();\n        });\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNoYWkiLCJyZXF1aXJlIiwiY2hhaUh0dHAiLCJhcHAiLCJ1c2UiLCJkZXNjcmliZSIsIml0IiwiZG9uZSIsInJlcXVlc3QiLCJnZXQiLCJlbmQiLCJlcnIiLCJyZXMiLCJleHBlY3QiLCJ0byIsImhhdmUiLCJzdGF0dXMiLCJib2R5IiwiYmUiLCJhbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQXhCOztBQUNBLE1BQU1FLEdBQUcsR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBbkI7O0FBRUFELElBQUksQ0FBQ0ksR0FBTCxDQUFTRixRQUFUO0FBRUFHLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBSTtBQUNsQkEsRUFBQUEsUUFBUSxDQUFDLFlBQUQsRUFBYyxNQUN0QjtBQUNJQyxJQUFBQSxFQUFFLENBQUMsZUFBRCxFQUFrQkMsSUFBRCxJQUFRO0FBQ3ZCUCxNQUFBQSxJQUFJLENBQUNRLE9BQUwsQ0FBYUwsR0FBYixFQUNDTSxHQURELENBQ0ssWUFETCxFQUVDQyxHQUZELENBRUssQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEtBQVc7QUFDWixZQUFHRCxHQUFILEVBQVFKLElBQUksQ0FBQ0ksR0FBRCxDQUFKLENBQ1BFLE1BRE8sQ0FDQUQsR0FEQSxFQUNLRSxFQURMLENBQ1FDLElBRFIsQ0FDYUMsTUFEYixDQUNvQixHQURwQixFQUVQSCxNQUZPLENBRUFELEdBQUcsQ0FBQ0ssSUFGSixFQUVVSCxFQUZWLENBRWFJLEVBRmIsQ0FFZ0JDLEVBRmhCLENBRW1CLE9BRm5CO0FBR1JaLFFBQUFBLElBQUk7QUFDUCxPQVBEO0FBUUgsS0FUQyxDQUFGO0FBVUgsR0FaTyxDQUFSLEVBYUFGLFFBQVEsQ0FBQyw0QkFBRCxFQUE4QixNQUFJO0FBQ3RDQSxJQUFBQSxRQUFRLENBQUMsd0JBQUQsRUFBMEIsTUFBSTtBQUNsQ0MsTUFBQUEsRUFBRSxDQUFDLG9DQUFELEVBQXVDQyxJQUFELElBQVE7QUFDNUNQLFFBQUFBLElBQUksQ0FBQ1EsT0FBTCxDQUFhTCxHQUFiLEVBQ0NNLEdBREQsQ0FDSyxzQkFETCxFQUVDQyxHQUZELENBRUssQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEtBQVc7QUFDWixjQUFHRCxHQUFILEVBQVFKLElBQUksQ0FBQ0ksR0FBRCxDQUFKLENBQ1BFLE1BRE8sQ0FDQUQsR0FEQSxFQUNLRSxFQURMLENBQ1FDLElBRFIsQ0FDYUMsTUFEYixDQUNvQixHQURwQixFQUVQSCxNQUZPLENBRUFELEdBQUcsQ0FBQ0ssSUFGSixFQUVVSCxFQUZWLENBRWFJLEVBRmIsQ0FFZ0JDLEVBRmhCLENBRW1CLE9BRm5CO0FBR1JaLFVBQUFBLElBQUk7QUFDUCxTQVBEO0FBUUgsT0FUQyxDQUFGO0FBVUgsS0FYTyxDQUFSO0FBWUgsR0FiTyxDQWJSO0FBMkJILENBNUJPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hlbGxvL0Rlc2t0b3AvS2VudGthcnQvc3VydmV5QXBpL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2hhaSA9IHJlcXVpcmUoJ2NoYWknKVxuY29uc3QgY2hhaUh0dHAgPSByZXF1aXJlKCdjaGFpLWh0dHAnKVxuY29uc3QgYXBwID0gcmVxdWlyZSgnLi4vYXBwJykgXG5cbmNoYWkudXNlKGNoYWlIdHRwKVxuXG5kZXNjcmliZSgndXNlcnMnLCAoKT0+e1xuICAgIGRlc2NyaWJlKCdHRVQgL3VzZXJzJywoKT0+XG4gICAge1xuICAgICAgICBpdCgnVXNlcnMgZG9udWNlaycsKGRvbmUpPT57XG4gICAgICAgICAgICBjaGFpLnJlcXVlc3QoYXBwKVxuICAgICAgICAgICAgLmdldCgnL2FwaS91c2VycycpXG4gICAgICAgICAgICAuZW5kKChlcnIscmVzKT0+e1xuICAgICAgICAgICAgICAgIGlmKGVycikgZG9uZShlcnIpXG4gICAgICAgICAgICAgICAgLmV4cGVjdChyZXMpLnRvLmhhdmUuc3RhdHVzKDIwMClcbiAgICAgICAgICAgICAgICAuZXhwZWN0KHJlcy5ib2R5KS50by5iZS5hbignYXJyYXknKVxuICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgIH0pICAgXG4gICAgICAgIH0pXG4gICAgfSksXG4gICAgZGVzY3JpYmUoJ0Fua2V0IFNvcnVsYXJpbmkgTGlzdGVsZW5lJywoKT0+e1xuICAgICAgICBkZXNjcmliZSgnR0VUICAvc3VydmV5L3F1ZXN0aW9ucycsKCk9PntcbiAgICAgICAgICAgIGl0KCdTb3J1bGFyIHZlIGNldmFwIHNpa2xhcmkgY2VraWxpY2VrJywoZG9uZSk9PntcbiAgICAgICAgICAgICAgICBjaGFpLnJlcXVlc3QoYXBwKVxuICAgICAgICAgICAgICAgIC5nZXQoJ2FwaS9zdXJ2ZXkvcXVlc3Rpb25zJylcbiAgICAgICAgICAgICAgICAuZW5kKChlcnIscmVzKT0+eyBcbiAgICAgICAgICAgICAgICAgICAgaWYoZXJyKSBkb25lKGVycikgXG4gICAgICAgICAgICAgICAgICAgIC5leHBlY3QocmVzKS50by5oYXZlLnN0YXR1cygyMDApXG4gICAgICAgICAgICAgICAgICAgIC5leHBlY3QocmVzLmJvZHkpLnRvLmJlLmFuKCdhcnJheScpXG4gICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9KSBcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "chai",
        "require",
        "chaiHttp",
        "app",
        "use",
        "describe",
        "it",
        "done",
        "request",
        "get",
        "end",
        "err",
        "res",
        "expect",
        "to",
        "have",
        "status",
        "body",
        "be",
        "an"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAnB;;AAEAD,IAAI,CAACI,GAAL,CAASF,QAAT;AAEAG,QAAQ,CAAC,OAAD,EAAU,MAAI;AAClBA,EAAAA,QAAQ,CAAC,YAAD,EAAc,MACtB;AACIC,IAAAA,EAAE,CAAC,eAAD,EAAkBC,IAAD,IAAQ;AACvBP,MAAAA,IAAI,CAACQ,OAAL,CAAaL,GAAb,EACCM,GADD,CACK,YADL,EAECC,GAFD,CAEK,CAACC,GAAD,EAAKC,GAAL,KAAW;AACZ,YAAGD,GAAH,EAAQJ,IAAI,CAACI,GAAD,CAAJ,CACPE,MADO,CACAD,GADA,EACKE,EADL,CACQC,IADR,CACaC,MADb,CACoB,GADpB,EAEPH,MAFO,CAEAD,GAAG,CAACK,IAFJ,EAEUH,EAFV,CAEaI,EAFb,CAEgBC,EAFhB,CAEmB,OAFnB;AAGRZ,QAAAA,IAAI;AACP,OAPD;AAQH,KATC,CAAF;AAUH,GAZO,CAAR,EAaAF,QAAQ,CAAC,4BAAD,EAA8B,MAAI;AACtCA,IAAAA,QAAQ,CAAC,wBAAD,EAA0B,MAAI;AAClCC,MAAAA,EAAE,CAAC,oCAAD,EAAuCC,IAAD,IAAQ;AAC5CP,QAAAA,IAAI,CAACQ,OAAL,CAAaL,GAAb,EACCM,GADD,CACK,sBADL,EAECC,GAFD,CAEK,CAACC,GAAD,EAAKC,GAAL,KAAW;AACZ,cAAGD,GAAH,EAAQJ,IAAI,CAACI,GAAD,CAAJ,CACPE,MADO,CACAD,GADA,EACKE,EADL,CACQC,IADR,CACaC,MADb,CACoB,GADpB,EAEPH,MAFO,CAEAD,GAAG,CAACK,IAFJ,EAEUH,EAFV,CAEaI,EAFb,CAEgBC,EAFhB,CAEmB,OAFnB;AAGRZ,UAAAA,IAAI;AACP,SAPD;AAQH,OATC,CAAF;AAUH,KAXO,CAAR;AAYH,GAbO,CAbR;AA2BH,CA5BO,CAAR",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/test/",
      "sourcesContent": [
        "const chai = require('chai')\nconst chaiHttp = require('chai-http')\nconst app = require('../app') \n\nchai.use(chaiHttp)\n\ndescribe('users', ()=>{\n    describe('GET /users',()=>\n    {\n        it('Users donucek',(done)=>{\n            chai.request(app)\n            .get('/api/users')\n            .end((err,res)=>{\n                if(err) done(err)\n                .expect(res).to.have.status(200)\n                .expect(res.body).to.be.an('array')\n                done();\n            })   \n        })\n    }),\n    describe('Anket Sorularini Listelene',()=>{\n        describe('GET  /survey/questions',()=>{\n            it('Sorular ve cevap siklari cekilicek',(done)=>{\n                chai.request(app)\n                .get('api/survey/questions')\n                .end((err,res)=>{ \n                    if(err) done(err) \n                    .expect(res).to.have.status(200)\n                    .expect(res.body).to.be.an('array')\n                    done();\n                })\n            })\n        })\n    }) \n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1602751047280
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "var createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\n\nvar surveyRouter = require('./routes/survey');\n\nvar usersRouter = require('./routes/users');\n\nvar adminRouter = require('./routes/admin');\n\nvar app = express(); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/', indexRouter);\napp.use('/api/survey', surveyRouter);\napp.use('/api/users', usersRouter);\napp.use('/api/admin', adminRouter); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsImluZGV4Um91dGVyIiwic3VydmV5Um91dGVyIiwidXNlcnNSb3V0ZXIiLCJhZG1pblJvdXRlciIsImFwcCIsInNldCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJ1c2UiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwic3RhdGljIiwicmVxIiwicmVzIiwibmV4dCIsImVyciIsImxvY2FscyIsIm1lc3NhZ2UiLCJlcnJvciIsImdldCIsInN0YXR1cyIsInJlbmRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFdBQVcsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQWxCOztBQUNBLElBQUlHLFlBQVksR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBMUI7O0FBQ0EsSUFBSUksTUFBTSxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxJQUFJSyxXQUFXLEdBQUdMLE9BQU8sQ0FBQyxnQkFBRCxDQUF6Qjs7QUFDQSxJQUFJTSxZQUFZLEdBQUdOLE9BQU8sQ0FBQyxpQkFBRCxDQUExQjs7QUFDQSxJQUFJTyxXQUFXLEdBQUdQLE9BQU8sQ0FBQyxnQkFBRCxDQUF6Qjs7QUFDQSxJQUFJUSxXQUFXLEdBQUdSLE9BQU8sQ0FBQyxnQkFBRCxDQUF6Qjs7QUFFQSxJQUFJUyxHQUFHLEdBQUdSLE9BQU8sRUFBakIsQyxDQUVBOztBQUNBUSxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCUixJQUFJLENBQUNTLElBQUwsQ0FBVUMsU0FBVixFQUFxQixPQUFyQixDQUFqQjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLE1BQXZCO0FBRUFELEdBQUcsQ0FBQ0ksR0FBSixDQUFRVCxNQUFNLENBQUMsS0FBRCxDQUFkO0FBQ0FLLEdBQUcsQ0FBQ0ksR0FBSixDQUFRWixPQUFPLENBQUNhLElBQVIsRUFBUjtBQUNBTCxHQUFHLENBQUNJLEdBQUosQ0FBUVosT0FBTyxDQUFDYyxVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVI7QUFDQVAsR0FBRyxDQUFDSSxHQUFKLENBQVFWLFlBQVksRUFBcEI7QUFDQU0sR0FBRyxDQUFDSSxHQUFKLENBQVFaLE9BQU8sQ0FBQ2dCLE1BQVIsQ0FBZWYsSUFBSSxDQUFDUyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsUUFBckIsQ0FBZixDQUFSO0FBRUFILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLEdBQVIsRUFBYVIsV0FBYjtBQUNBSSxHQUFHLENBQUNJLEdBQUosQ0FBUSxhQUFSLEVBQXVCUCxZQUF2QjtBQUNBRyxHQUFHLENBQUNJLEdBQUosQ0FBUSxZQUFSLEVBQXNCTixXQUF0QjtBQUNBRSxHQUFHLENBQUNJLEdBQUosQ0FBUSxZQUFSLEVBQXNCTCxXQUF0QixFLENBRUE7O0FBQ0FDLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNLLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDL0JBLEVBQUFBLElBQUksQ0FBQ3JCLFdBQVcsQ0FBQyxHQUFELENBQVosQ0FBSjtBQUNELENBRkQsRSxDQUlBOztBQUNBVSxHQUFHLENBQUNJLEdBQUosQ0FBUSxVQUFTUSxHQUFULEVBQWNILEdBQWQsRUFBbUJDLEdBQW5CLEVBQXdCQyxJQUF4QixFQUE4QjtBQUNwQztBQUNBRCxFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0MsT0FBWCxHQUFxQkYsR0FBRyxDQUFDRSxPQUF6QjtBQUNBSixFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0UsS0FBWCxHQUFtQk4sR0FBRyxDQUFDVCxHQUFKLENBQVFnQixHQUFSLENBQVksS0FBWixNQUF1QixhQUF2QixHQUF1Q0osR0FBdkMsR0FBNkMsRUFBaEUsQ0FIb0MsQ0FLcEM7O0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXTCxHQUFHLENBQUNLLE1BQUosSUFBYyxHQUF6QjtBQUNBUCxFQUFBQSxHQUFHLENBQUNRLE1BQUosQ0FBVyxPQUFYO0FBQ0QsQ0FSRDtBQVVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixHQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGVsbG8vRGVza3RvcC9LZW50a2FydC9zdXJ2ZXlBcGkvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnaHR0cC1lcnJvcnMnKTtcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpO1xudmFyIGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xuXG52YXIgaW5kZXhSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9pbmRleCcpO1xudmFyIHN1cnZleVJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL3N1cnZleScpO1xudmFyIHVzZXJzUm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcnMnKTtcbnZhciBhZG1pblJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL2FkbWluJyk7XG5cbnZhciBhcHAgPSBleHByZXNzKCk7XG5cbi8vIHZpZXcgZW5naW5lIHNldHVwXG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKTtcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ2phZGUnKTtcblxuYXBwLnVzZShsb2dnZXIoJ2RldicpKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xuXG5hcHAudXNlKCcvJywgaW5kZXhSb3V0ZXIpO1xuYXBwLnVzZSgnL2FwaS9zdXJ2ZXknLCBzdXJ2ZXlSb3V0ZXIpO1xuYXBwLnVzZSgnL2FwaS91c2VycycsIHVzZXJzUm91dGVyKTtcbmFwcC51c2UoJy9hcGkvYWRtaW4nLCBhZG1pblJvdXRlcik7XG5cbi8vIGNhdGNoIDQwNCBhbmQgZm9yd2FyZCB0byBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIG5leHQoY3JlYXRlRXJyb3IoNDA0KSk7XG59KTtcblxuLy8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbihlcnIsIHJlcSwgcmVzLCBuZXh0KSB7XG4gIC8vIHNldCBsb2NhbHMsIG9ubHkgcHJvdmlkaW5nIGVycm9yIGluIGRldmVsb3BtZW50XG4gIHJlcy5sb2NhbHMubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuICByZXMubG9jYWxzLmVycm9yID0gcmVxLmFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyIDoge307XG5cbiAgLy8gcmVuZGVyIHRoZSBlcnJvciBwYWdlXG4gIHJlcy5zdGF0dXMoZXJyLnN0YXR1cyB8fCA1MDApO1xuICByZXMucmVuZGVyKCdlcnJvcicpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "indexRouter",
        "surveyRouter",
        "usersRouter",
        "adminRouter",
        "app",
        "set",
        "join",
        "__dirname",
        "use",
        "json",
        "urlencoded",
        "extended",
        "static",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIK,WAAW,GAAGL,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,iBAAD,CAA1B;;AACA,IAAIO,WAAW,GAAGP,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIQ,WAAW,GAAGR,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAIS,GAAG,GAAGR,OAAO,EAAjB,C,CAEA;;AACAQ,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBR,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AAEAD,GAAG,CAACI,GAAJ,CAAQT,MAAM,CAAC,KAAD,CAAd;AACAK,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACa,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACc,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQV,YAAY,EAApB;AACAM,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACgB,MAAR,CAAef,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaR,WAAb;AACAI,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAuBP,YAAvB;AACAG,GAAG,CAACI,GAAJ,CAAQ,YAAR,EAAsBN,WAAtB;AACAE,GAAG,CAACI,GAAJ,CAAQ,YAAR,EAAsBL,WAAtB,E,CAEA;;AACAC,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACrB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAU,GAAG,CAACI,GAAJ,CAAQ,UAASQ,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACT,GAAJ,CAAQgB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiBpB,GAAjB",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/",
      "sourcesContent": [
        "var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\nvar surveyRouter = require('./routes/survey');\nvar usersRouter = require('./routes/users');\nvar adminRouter = require('./routes/admin');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/api/survey', surveyRouter);\napp.use('/api/users', usersRouter);\napp.use('/api/admin', adminRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601995172863
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  res.render('index', {\n    title: 'Express'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiO0FBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFwQjtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGVsbG8vRGVza3RvcC9LZW50a2FydC9zdXJ2ZXlBcGkvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8qIEdFVCBob21lIHBhZ2UuICovXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnJlbmRlcignaW5kZXgnLCB7IHRpdGxlOiAnRXhwcmVzcycgfSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601886528404
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/survey.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/survey.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/routes/survey.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/survey.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
        "sourceFileName": "survey.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nconst {\n  database\n} = require('../config/helpers');\n/* GET users listing. */\n\n\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n}); // sorular ve cevaplari cekiliyor\n\nrouter.get('/questions/:surveyCaptionId', (req, res) => {\n  surveyCaptionId = req.params.surveyCaptionId;\n  database.query(`select a.id as cevapId,q.id, q.surveyQuestion,a.answer from survey q join surveyAnswers a on q.id = a.QuestionId join surveyCaption sc on q.surveyCaptionId=sc.id where q.surveyCaptionId = ${surveyCaptionId} order by a.questionId,a.score `).then(result => {\n    res.status(200).send(result);\n  }).catch(err => {\n    res.status(300).send('Something went wrong !!');\n  });\n}); //butun yanitlari ceker\n\nrouter.get('/getAllAnswer', (req, res) => {\n  database.query('select u.username,a.surveyUserId ,q.surveyQuestion ,sa.answer from answers a  join users u on a.userId = u.id   join surveyAnswers sa on a.answerId = sa.id join survey q on a.questionId = q.id ').then(result => {\n    res.send(result);\n  }).catch(err => {\n    res.status(300).send('Something went wrong !!');\n  });\n}); //Anket isimlerini ceker\n\nrouter.get('/title', (req, res) => {\n  database.query('select * from surveyCaption').then(result => {\n    res.send(result);\n  }).catch(err => {\n    res.status(300).send('Something went wrong !!');\n  });\n}); //list survey by id\n\nrouter.get('/listById/:userId', (req, res) => {\n  userId = req.params.userId;\n  database.query(`select sa.id as surveyAssignId,u.id as id,sa.who,sa.whom,u.department as department,sa.surveyCaptionId,u.username as username,sc.surveyTitle as surveyTitle from surveyAssign as sa join users u on u.id=sa.whom join surveyCaption sc on sc.id = sa.surveyCaptionId where sa.who = ${userId}  order by u.username`).then(result => {\n    res.send(result);\n  });\n});\nrouter.post('/delete', (req, res) => {\n  console.log(req.body);\n  let captionId = req.body.captionId;\n  database.query(`delete from surveyCaption where id=${captionId}`).then(result => {\n    res.status(200).send({\n      success: true\n    });\n  }).catch(err => {\n    console.log(err);\n    res.status(300).send({\n      success: false\n    });\n  });\n}); // yeni soru ve cevaplari eklenir\n\nrouter.post('/new', (req, res) => {\n  let survey = req.body;\n  console.log(survey);\n  let surveyQuestion = survey.question;\n  let answers = [];\n  survey.answers.forEach(element => {\n    answers.push(element);\n    if (element == \"\") res.send({\n      success: false\n    });\n  });\n  if (survey.question == \"\") res.send({\n    success: false\n  });\n  database.query(`insert into survey (surveyQuestion,surveyCaptionId) values (\"${surveyQuestion}\",${survey.surveyCaptionId})`).then(result => {\n    questionId = result.insertId;\n    answers.forEach(item => {\n      database.query(`insert into surveyAnswers (questionId,answer,surveyCaptionId,score) values (${questionId},\"${item.cevap}\",${survey.surveyCaptionId},${item.score})`).catch(err => console.log(err));\n    });\n  }).catch(err => console.log(err));\n  res.status(200).send({\n    success: true\n  });\n}); // Yeni anket ismi ekleniyor\n\nrouter.post('/newCaption', (req, res) => {\n  console.log(req.body);\n\n  if (req.body.caption != \"\") {\n    database.query(`insert into surveyCaption (surveyTitle) values (\"${req.body.caption}\")`).then(result => {\n      res.send({\n        success: true\n      });\n    }).catch(err => console.log(err));\n  } else res.send({\n    success: false\n  });\n}); // Oylanan anket ekleme islemi yapiliyor\n\nrouter.post('/finalAnswer', (req, res) => {\n  console.log(req.body);\n  let result = req.body.answers.results;\n  let userId = req.body.answers.userId;\n  let surveyUserId = req.body.answers.surveyUserId;\n  let surveyCaptionId = req.body.answers.surveyCaptionId;\n  result.forEach(item => {\n    console.log(item);\n    database.query(`insert into answers (questionId,answerId,userId,surveyUserId,surveyCaptionId) values (${item.questionId},${item.answerId},${userId},${surveyUserId},${surveyCaptionId})`).then(e => console.log('inserted')).catch(err => console.log(err));\n  });\n  res.send({\n    succes: true\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "survey.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "database",
        "get",
        "req",
        "res",
        "next",
        "send",
        "surveyCaptionId",
        "params",
        "query",
        "then",
        "result",
        "status",
        "catch",
        "err",
        "userId",
        "post",
        "console",
        "log",
        "body",
        "captionId",
        "success",
        "survey",
        "surveyQuestion",
        "question",
        "answers",
        "forEach",
        "element",
        "push",
        "questionId",
        "insertId",
        "item",
        "cevap",
        "score",
        "caption",
        "results",
        "surveyUserId",
        "answerId",
        "e",
        "succes",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\nconst { database } = require('../config/helpers')\n/* GET users listing. */\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\n\n// sorular ve cevaplari cekiliyor\nrouter.get('/questions/:surveyCaptionId',(req,res) =>{\n  surveyCaptionId = req.params.surveyCaptionId;\n  database.query(`select a.id as cevapId,q.id, q.surveyQuestion,a.answer from survey q join surveyAnswers a on q.id = a.QuestionId join surveyCaption sc on q.surveyCaptionId=sc.id where q.surveyCaptionId = ${surveyCaptionId} order by a.questionId,a.score `).then(\n    result => \n    {\n      res.status(200).send(result)\n    }).catch(\n      err => \n    {\n      res.status(300).send('Something went wrong !!')\n    })\n})\n\n//butun yanitlari ceker\nrouter.get('/getAllAnswer',(req,res)=>{\n  database.query('select u.username,a.surveyUserId ,q.surveyQuestion ,sa.answer from answers a  join users u on a.userId = u.id   join surveyAnswers sa on a.answerId = sa.id join survey q on a.questionId = q.id ')\n  .then(result =>{  \n      res.send(result)\n    \n  }).catch(\n    err => \n  {\n    res.status(300).send('Something went wrong !!')\n  })\n})\n\n//Anket isimlerini ceker\nrouter.get('/title',(req,res)=>{\n  database.query('select * from surveyCaption')\n  .then(result =>{  \n      res.send(result)\n    \n  }).catch(\n    err => \n  {\n    res.status(300).send('Something went wrong !!')\n  })\n})\n//list survey by id\n router.get('/listById/:userId',(req,res) =>\n {\n\n    userId = req.params.userId;   \n    database.query(`select sa.id as surveyAssignId,u.id as id,sa.who,sa.whom,u.department as department,sa.surveyCaptionId,u.username as username,sc.surveyTitle as surveyTitle from surveyAssign as sa join users u on u.id=sa.whom join surveyCaption sc on sc.id = sa.surveyCaptionId where sa.who = ${userId}  order by u.username`)\n    .then(result => { \n      res.send(result)\n    })\n })\nrouter.post('/delete',(req,res)=>\n{\n  console.log(req.body)\n    let captionId = req.body.captionId\n    database.query(`delete from surveyCaption where id=${captionId}`).then(result=>\n        {\n        res.status(200).send({success:true})\n    }).catch(err=>{\n      console.log(err) \n      res.status(300).send({success:false})\n    })\n})\n// yeni soru ve cevaplari eklenir\nrouter.post('/new', (req, res) => { \n  let survey = req.body;\n  console.log(survey)\n  let surveyQuestion = survey.question;\n  \n  let answers = []\n  survey.answers.forEach(element => {\n    answers.push(element);\n    if(element == \"\") \n      res.send({success:false})\n  });\n  if(survey.question == \"\")\n    res.send({success:false})\n\n  database.query(`insert into survey (surveyQuestion,surveyCaptionId) values (\"${surveyQuestion}\",${survey.surveyCaptionId})`)\n    .then(result => {\n      questionId = result.insertId;\n      answers.forEach(item => {\n        database.query(`insert into surveyAnswers (questionId,answer,surveyCaptionId,score) values (${questionId},\"${item.cevap}\",${survey.surveyCaptionId},${item.score})`).catch(err => console.log(err))\n      })\n    }).catch(err => console.log(err))\n  res.status(200).send({success:true});\n\n})\n// Yeni anket ismi ekleniyor\nrouter.post('/newCaption',(req,res)=>{\n  console.log(req.body)\n  if(req.body.caption!=\"\")\n  {\n    database.query(`insert into surveyCaption (surveyTitle) values (\"${req.body.caption}\")`).then(result=>{\n      res.send({success:true})\n    }).catch(err => console.log(err))\n  }\n  else\n  res.send({success:false})\n})\n// Oylanan anket ekleme islemi yapiliyor\nrouter.post('/finalAnswer', (req,res) =>\n{ \n  console.log(req.body)\n  let result  = req.body.answers.results;\n  let userId = req.body.answers.userId;\n  let surveyUserId = req.body.answers.surveyUserId; \n  let surveyCaptionId = req.body.answers.surveyCaptionId; \n  \n   result.forEach(item =>\n   {\n     console.log(item)\n       database.query(`insert into answers (questionId,answerId,userId,surveyUserId,surveyCaptionId) values (${item.questionId},${item.answerId},${userId},${surveyUserId},${surveyCaptionId})`)\n       .then(e => console.log('inserted'))\n       .catch(err => console.log(err));\n   })\n   res.send({succes:true})\n}) \n\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602252986555
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/config/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/config/helpers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/config/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/config/helpers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/config/helpers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/config/helpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/config/",
        "sourceFileName": "helpers.js"
      }
    },
    "ast": null,
    "code": "const mysqli = require('mysqli');\n\nlet conn = new mysqli({\n  host: 'localhost',\n  post: 3306,\n  user: 'root',\n  passwd: '',\n  charset: 'utf8_general_ci',\n  db: 'survey'\n});\nlet db = conn.emit(false, '');\nmodule.exports = {\n  database: db\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsibXlzcWxpIiwicmVxdWlyZSIsImNvbm4iLCJob3N0IiwicG9zdCIsInVzZXIiLCJwYXNzd2QiLCJjaGFyc2V0IiwiZGIiLCJlbWl0IiwibW9kdWxlIiwiZXhwb3J0cyIsImRhdGFiYXNlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUVBLElBQUlDLElBQUksR0FBRSxJQUFJRixNQUFKLENBQ047QUFDSUcsRUFBQUEsSUFBSSxFQUFFLFdBRFY7QUFFSUMsRUFBQUEsSUFBSSxFQUFFLElBRlY7QUFHSUMsRUFBQUEsSUFBSSxFQUFFLE1BSFY7QUFJSUMsRUFBQUEsTUFBTSxFQUFFLEVBSlo7QUFLSUMsRUFBQUEsT0FBTyxFQUFFLGlCQUxiO0FBTUlDLEVBQUFBLEVBQUUsRUFBRTtBQU5SLENBRE0sQ0FBVjtBQVdBLElBQUlBLEVBQUUsR0FBR04sSUFBSSxDQUFDTyxJQUFMLENBQVUsS0FBVixFQUFnQixFQUFoQixDQUFUO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxRQUFRLEVBQUNKO0FBREksQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hlbGxvL0Rlc2t0b3AvS2VudGthcnQvc3VydmV5QXBpL2NvbmZpZy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBteXNxbGkgPSByZXF1aXJlKCdteXNxbGknKVxuXG5sZXQgY29ubiA9bmV3IG15c3FsaShcbiAgICB7XG4gICAgICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgICAgICBwb3N0OiAzMzA2LCAgXG4gICAgICAgIHVzZXI6ICdyb290JywgIFxuICAgICAgICBwYXNzd2Q6ICcnLCAgXG4gICAgICAgIGNoYXJzZXQ6ICd1dGY4X2dlbmVyYWxfY2knLCAgXG4gICAgICAgIGRiOiAnc3VydmV5J1xuICAgICAgfVxuKVxuXG5sZXQgZGIgPSBjb25uLmVtaXQoZmFsc2UsJycpO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZGF0YWJhc2U6ZGJcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "helpers.js"
      ],
      "names": [
        "mysqli",
        "require",
        "conn",
        "host",
        "post",
        "user",
        "passwd",
        "charset",
        "db",
        "emit",
        "module",
        "exports",
        "database"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAIC,IAAI,GAAE,IAAIF,MAAJ,CACN;AACIG,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,IAAI,EAAE,IAFV;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,MAAM,EAAE,EAJZ;AAKIC,EAAAA,OAAO,EAAE,iBALb;AAMIC,EAAAA,EAAE,EAAE;AANR,CADM,CAAV;AAWA,IAAIA,EAAE,GAAGN,IAAI,CAACO,IAAL,CAAU,KAAV,EAAgB,EAAhB,CAAT;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,QAAQ,EAACJ;AADI,CAAjB",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/config/",
      "sourcesContent": [
        "const mysqli = require('mysqli')\n\nlet conn =new mysqli(\n    {\n        host: 'localhost',\n        post: 3306,  \n        user: 'root',  \n        passwd: '',  \n        charset: 'utf8_general_ci',  \n        db: 'survey'\n      }\n)\n\nlet db = conn.emit(false,'');\nmodule.exports = {\n    database:db\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1601887587143
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/users.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/users.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/routes/users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar md5 = require('md5');\n\nconst {\n  v4: uuidv4\n} = require('uuid');\n\nconst {\n  database\n} = require('../config/helpers');\n\nvar jwt = require('jsonwebtoken');\n\nconst authReqAdmin = 123123;\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  database.query(`select * from users where authority != ${authReqAdmin} `).then(result => {\n    res.send(result);\n  }).catch(err => {\n    res.status(200).send('Something went wrongss !!');\n  });\n});\nrouter.post('/delete', (req, res, next) => {\n  let userId = req.body.userId;\n  database.query(`delete from users where id=${userId}`).then(result => {\n    res.status(200).send({\n      success: true\n    });\n  }).catch(err => {\n    console.log(err);\n    res.status(300).send({\n      success: false\n    });\n  });\n});\nrouter.post('/login', function (req, res, next) {\n  let user = req.body;\n\n  if (user.username) {\n    database.query(`select * from users where username=\"${user.username}\" and password = \"${md5(user.password)}\"`).then(result => {\n      if (result.length > 0) {\n        res.status(200).send({\n          result: jwt.sign(JSON.stringify(result), 'shhhhh')\n        });\n      } else res.status(200).send({\n        err: 'Kullanici bulunamadi'\n      });\n    }).catch(err => console.log(err));\n  } else res.send('Failed');\n}); // Kullaniciya atanan anketi kaldirir\n\nrouter.post('/removeAssign', function (req, res, next) {\n  let assignId = req.body.assignId;\n\n  if (assignId) {\n    database.query(`delete from surveyAssign where id=${assignId}`).then(result => {\n      if (result) {\n        res.status(200).send({\n          success: true\n        });\n      }\n    }).catch(err => {\n      res.send({\n        success: false\n      });\n      console.log(err);\n    });\n  } else res.send({\n    success: false\n  });\n});\nrouter.post('/register', function (req, res, next) {\n  let user = req.body;\n\n  if (user.username && user.department) {\n    database.query(`insert into users (username,department,password) values (\"${user.username}\",\"${user.department}\",\"${md5(user.password)}\")`).then((result, err) => {\n      if (result) {\n        res.status(200).send({\n          success: true\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n      res.status(200).send({\n        success: false\n      });\n    });\n  } else res.send({\n    success: false\n  });\n});\nrouter.post('/results', (req, res, next) => {\n  console.log(req.body);\n  let {\n    captionId,\n    id,\n    userId\n  } = req.body; // database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion, sa.answer from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId = ${id} order by username,sc.surveyTitle desc`).then(result =>{\n\n  database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion, sa.answer,sa.score from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId =${userId} and sc.id = ${captionId} and u.id = ${id} order by username,sc.surveyTitle`).then(result => {\n    res.status(200).send(result);\n  }).catch(err => {\n    res.status(300).send({\n      error: 'Something went wrong !!'\n    });\n  });\n});\nrouter.get('/resultsById/:id', (req, res, next) => {\n  let id = req.params.id; // database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion, sa.answer from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId = ${id} order by username,sc.surveyTitle desc`).then(result =>{\n\n  database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion,sa.score, sa.answer from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId = ${id} order by username,sc.surveyTitle desc`).then(result => {\n    res.status(200).send(result);\n  }).catch(err => {\n    res.status(300).send({\n      error: 'Something went wrong !!'\n    });\n  });\n});\nrouter.get('/totalResult', (req, res) => {\n  database.query(`select u.username,u.id,count(s.id) as qCount,sum(score) as score from surveyAnswers sa join answers a on a.answerId=sa.id join users u on a.surveyUserId = u.id join survey s on s.id=a.questionId GROUP by u.username`).then(result => {\n    res.status(200).send(result);\n  }).catch(err => {\n    res.status(300).send({\n      error: 'Something went wrong !!'\n    });\n  });\n});\nrouter.get('/results/:id', (req, res, next) => {\n  let id = req.params.id; // database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion, sa.answer from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId = ${id} order by username,sc.surveyTitle desc`).then(result =>{\n\n  database.query(`select sc.id as captionId,sc.surveyTitle,a.userId, u.id, u.username,u.department, sum(score) as score from surveyAnswers sa join answers a on sa.id = a.answerId join surveyCaption sc on sc.id = sa.surveyCaptionId join users u on u.id= a.surveyUserId group by a.surveyUserId,captionId,userId having userId =${id}`).then(result => {\n    res.status(200).send(result);\n  }).catch(err => {\n    res.status(300).send({\n      error: 'Something went wrong !!'\n    });\n  });\n});\nrouter.get('/resultUser', (req, res, next) => {\n  database.query(`select * from users where id in(SELECT userId FROM answers GROUP by userId)`).then(result => {\n    res.send(result);\n  }).catch(err => {\n    res.status(300).send({\n      error: 'Something went wrong !!'\n    });\n  });\n});\nrouter.get('/:userId', (req, res, next) => {\n  let finalResult = [],\n      temp = [];\n  userId = req.params.userId; // and u.id not in(select surveyUserId from answers where userId = ${userId})\n\n  database.query(`select u.id as id,sa.who,sa.whom,u.department as department,sa.surveyCaptionId,u.username as username,sc.surveyTitle as surveyTitle from surveyAssign as sa join users u on u.id=sa.whom join surveyCaption sc on sc.id = sa.surveyCaptionId where sa.who = ${userId}  order by u.username`).then(result => {\n    database.query(`SELECT * FROM answers WHERE userid=${userId}`).then(item => {\n      if (item.length == 0) res.send(result);\n      console.log(result);\n      item.forEach(i => {\n        // temp.push(result.filter(element=>element.surveyCaptionId != i.surveyCaptionId || element.whom != i.surveyUserId))\n        let existIndex = result.findIndex(element => element.surveyCaptionId == i.surveyCaptionId && element.whom == i.surveyUserId);\n        console.log(\"silindi\", existIndex);\n        if (existIndex >= 0) result.splice(existIndex, 1);\n        console.log(result); //    temp.forEach(e => {\n        //     finalResult.push(e)\n        //     });\n        // temp.length = 0;\n      });\n    }).then(() => {\n      res.send(result);\n    }).catch(err => {\n      console.log(err);\n      res.send({\n        success: false\n      });\n    });\n  }).catch(err => {\n    res.status(300).send('Something went wrong !!');\n    console.log(err);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "md5",
        "v4",
        "uuidv4",
        "database",
        "jwt",
        "authReqAdmin",
        "get",
        "req",
        "res",
        "next",
        "query",
        "then",
        "result",
        "send",
        "catch",
        "err",
        "status",
        "post",
        "userId",
        "body",
        "success",
        "console",
        "log",
        "user",
        "username",
        "password",
        "length",
        "sign",
        "JSON",
        "stringify",
        "assignId",
        "department",
        "captionId",
        "id",
        "error",
        "params",
        "finalResult",
        "temp",
        "item",
        "forEach",
        "i",
        "existIndex",
        "findIndex",
        "element",
        "surveyCaptionId",
        "whom",
        "surveyUserId",
        "splice",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router(); \nvar md5 = require('md5');\nconst { v4: uuidv4 } = require('uuid');\nconst { database } = require('../config/helpers')\nvar jwt = require('jsonwebtoken'); \nconst authReqAdmin=123123\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  \n    database.query(`select * from users where authority != ${authReqAdmin} `).then(result => {\n        res.send(result)\n    }).catch(err => {\n        res.status(200).send('Something went wrongss !!')\n    })\n    \n});\n\nrouter.post('/delete',(req,res,next)=>\n{ \n    let userId = req.body.userId\n    database.query(`delete from users where id=${userId}`).then(result=>\n        {\n        res.status(200).send({success:true})\n    }).catch(err=>{\n        console.log(err)\n        res.status(300).send({success:false})\n    })\n})\n\nrouter.post('/login',function (req,res,next) { \n   \n    let user = req.body\n    if(user.username)\n    {\n        database.query(`select * from users where username=\"${user.username}\" and password = \"${md5(user.password)}\"`)\n        .then(result => {\n            if(result.length>0)\n            { \n                res.status(200).send({result:jwt.sign(JSON.stringify(result), 'shhhhh')})\n            }else\n            res.status(200).send({err:'Kullanici bulunamadi'})\n        }).catch(err => console.log(err))\n    }else\n    res.send('Failed')\n})\n// Kullaniciya atanan anketi kaldirir\nrouter.post('/removeAssign',function (req,res,next) { \n    let assignId = req.body.assignId \n    if(assignId)\n    {\n        database.query(`delete from surveyAssign where id=${assignId}`)\n        .then(result => {\n            if(result)\n            {\n                res.status(200).send({success:true})\n            }\n        }).catch(err =>\n            {\n            res.send({success:false})\n            console.log(err)\n            })\n    }else\n    res.send({success:false})\n})\n\nrouter.post('/register', function(req, res, next) {\n    let user = req.body;  \n    if(user.username && user.department)\n    {\n        \n        database.query(`insert into users (username,department,password) values (\"${user.username}\",\"${user.department}\",\"${md5(user.password)}\")`)\n        .then((result,err) => { \n            if(result)\n            {\n                res.status(200).send({success:true})\n            }\n\n        }).catch(err => {\n            console.log(err)\n            res.status(200).send({success:false})\n        })\n    }else\n    res.send({success:false}) \n    \n});\n\nrouter.post('/results',(req,res,next)=>\n{\n    console.log(req.body)\n    let { captionId,id,userId } = req.body; \n    // database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion, sa.answer from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId = ${id} order by username,sc.surveyTitle desc`).then(result =>{\n    database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion, sa.answer,sa.score from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId =${userId} and sc.id = ${captionId} and u.id = ${id} order by username,sc.surveyTitle`)\n    .then(result =>{   \n    res.status(200).send(result)\n    }).catch(err => {\n        res.status(300).send({error:'Something went wrong !!'})\n    })\n\n\n})\n\n\nrouter.get('/resultsById/:id',(req,res,next)=>\n{\n    let id = req.params.id;\n    // database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion, sa.answer from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId = ${id} order by username,sc.surveyTitle desc`).then(result =>{\n    database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion,sa.score, sa.answer from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId = ${id} order by username,sc.surveyTitle desc`)\n    .then(result =>{   \n    res.status(200).send(result)\n    }).catch(err => {\n        res.status(300).send({error:'Something went wrong !!'})\n    })\n\n\n})\nrouter.get('/totalResult', (req,res)=>\n{ \n     database.query(`select u.username,u.id,count(s.id) as qCount,sum(score) as score from surveyAnswers sa join answers a on a.answerId=sa.id join users u on a.surveyUserId = u.id join survey s on s.id=a.questionId GROUP by u.username`)\n    .then(result =>{   \n    res.status(200).send(result)\n    }).catch(err => {\n        res.status(300).send({error:'Something went wrong !!'})\n    })\n})\nrouter.get('/results/:id',(req,res,next)=>\n{\n    let id = req.params.id;\n    // database.query(`select sc.surveyTitle,a.id, u.username,s.surveyQuestion, sa.answer from answers a join survey s on a.questionId = s.id join surveyAnswers sa on a.answerId = sa.id join users u on a.surveyUserId = u.id join surveyCaption sc on sc.id=s.surveyCaptionId where userId = ${id} order by username,sc.surveyTitle desc`).then(result =>{\n    database.query(`select sc.id as captionId,sc.surveyTitle,a.userId, u.id, u.username,u.department, sum(score) as score from surveyAnswers sa join answers a on sa.id = a.answerId join surveyCaption sc on sc.id = sa.surveyCaptionId join users u on u.id= a.surveyUserId group by a.surveyUserId,captionId,userId having userId =${id}`)\n    .then(result =>{   \n    res.status(200).send(result)\n    }).catch(err => {\n        res.status(300).send({error:'Something went wrong !!'})\n    })\n\n\n})\nrouter.get('/resultUser',(req,res,next) =>\n{ \n    database.query(`select * from users where id in(SELECT userId FROM answers GROUP by userId)`).then(result => {\n        res.send(result)\n    }).catch(err => {\n        res.status(300).send({error:'Something went wrong !!'})\n    })\n})\nrouter.get('/:userId',(req,res,next)=>\n{ let finalResult = [],temp = []\n    userId = req.params.userId;  \n\n    // and u.id not in(select surveyUserId from answers where userId = ${userId})\n    database.query(`select u.id as id,sa.who,sa.whom,u.department as department,sa.surveyCaptionId,u.username as username,sc.surveyTitle as surveyTitle from surveyAssign as sa join users u on u.id=sa.whom join surveyCaption sc on sc.id = sa.surveyCaptionId where sa.who = ${userId}  order by u.username`)\n    .then(result => {\n        \n        database.query(`SELECT * FROM answers WHERE userid=${userId}`).then(item =>{ \n            if(item.length == 0)\n            res.send(result) \n            console.log(result)\n            item.forEach(i => {\n            // temp.push(result.filter(element=>element.surveyCaptionId != i.surveyCaptionId || element.whom != i.surveyUserId))\n            let existIndex = (result.findIndex(element=>element.surveyCaptionId == i.surveyCaptionId && element.whom == i.surveyUserId))\n            console.log(\"silindi\",existIndex)\n            if(existIndex >=0)\n            result.splice(existIndex,1)\n\n            console.log(result)\n            //    temp.forEach(e => {\n            //     finalResult.push(e)\n            //     });\n            // temp.length = 0;\n            }) \n        }).then(()=>{   \n            res.send(result)\n        }).catch(err => {\n            console.log(err)\n            res.send({success:false})\n        })\n    }).catch(err => {\n        res.status(300).send('Something went wrong !!')\n        console.log(err)\n    }) \n})\n\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602665104666
  },
  "{\"sourceRoot\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"filename\":\"/Users/hello/Desktop/Kentkart/surveyApi/routes/admin.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hello/Desktop/Kentkart/surveyApi\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/hello/Desktop/Kentkart/surveyApi",
      "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/admin.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hello/Desktop/Kentkart/surveyApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hello/Desktop/Kentkart/surveyApi/routes/admin.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/hello/Desktop/Kentkart/surveyApi/routes/admin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
        "sourceFileName": "admin.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nconst {\n  database\n} = require('../config/helpers');\n/* GET home page. */\n\n\nrouter.get('/', function (req, res, next) {\n  res.render('index', {\n    title: 'Express'\n  });\n});\nrouter.post('/surveyAssign', (req, res, next) => {\n  let result = req.body;\n  console.log(result);\n  let assigns = result.assigns;\n  let keys = Object.keys(result.assigns);\n  keys.forEach(key => {\n    console.log(assigns[key]);\n\n    if (assigns[key] === true) {\n      database.query(`insert into surveyAssign (who,whom,surveyCaptionId) values (${result.userId},${key},${assigns.surveyCaptionId})`).then((result, err) => {\n        console.log(result, err);\n      }).catch(err => console.log(err));\n    } else console.log('eklemedi');\n  });\n  res.send({\n    success: true\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZGF0YWJhc2UiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVuZGVyIiwidGl0bGUiLCJwb3N0IiwicmVzdWx0IiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJhc3NpZ25zIiwia2V5cyIsIk9iamVjdCIsImZvckVhY2giLCJrZXkiLCJxdWVyeSIsInVzZXJJZCIsInN1cnZleUNhcHRpb25JZCIsInRoZW4iLCJlcnIiLCJjYXRjaCIsInNlbmQiLCJzdWNjZXNzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiOztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFlSCxPQUFPLENBQUMsbUJBQUQsQ0FBNUI7QUFFQTs7O0FBQ0FDLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFwQjtBQUNELENBRkQ7QUFLQVIsTUFBTSxDQUFDUyxJQUFQLENBQVksZUFBWixFQUE0QixDQUFDTCxHQUFELEVBQUtDLEdBQUwsRUFBU0MsSUFBVCxLQUM1QjtBQUNJLE1BQUlJLE1BQU0sR0FBR04sR0FBRyxDQUFDTyxJQUFqQjtBQUNBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsTUFBWjtBQUNBLE1BQUlJLE9BQU8sR0FBR0osTUFBTSxDQUFDSSxPQUFyQjtBQUNBLE1BQUlDLElBQUksR0FBRUMsTUFBTSxDQUFDRCxJQUFQLENBQVlMLE1BQU0sQ0FBQ0ksT0FBbkIsQ0FBVjtBQUVJQyxFQUFBQSxJQUFJLENBQUNFLE9BQUwsQ0FBYUMsR0FBRyxJQUFHO0FBQ2ZOLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxPQUFPLENBQUNJLEdBQUQsQ0FBbkI7O0FBQ0EsUUFBSUosT0FBTyxDQUFDSSxHQUFELENBQVAsS0FBaUIsSUFBckIsRUFDQTtBQUNJaEIsTUFBQUEsUUFBUSxDQUFDaUIsS0FBVCxDQUFnQiwrREFBOERULE1BQU0sQ0FBQ1UsTUFBTyxJQUFHRixHQUFJLElBQUdKLE9BQU8sQ0FBQ08sZUFBZ0IsR0FBOUgsRUFBa0lDLElBQWxJLENBQXVJLENBQUNaLE1BQUQsRUFBUWEsR0FBUixLQUFjO0FBQ2pKWCxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsTUFBWixFQUFtQmEsR0FBbkI7QUFDSCxPQUZELEVBRUdDLEtBRkgsQ0FFU0QsR0FBRyxJQUFFWCxPQUFPLENBQUNDLEdBQVIsQ0FBWVUsR0FBWixDQUZkO0FBR0gsS0FMRCxNQU1LWCxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaO0FBQ1IsR0FURDtBQVVBUixFQUFBQSxHQUFHLENBQUNvQixJQUFKLENBQVM7QUFBQ0MsSUFBQUEsT0FBTyxFQUFDO0FBQVQsR0FBVDtBQU9QLENBeEJEO0FBeUJBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI1QixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGVsbG8vRGVza3RvcC9LZW50a2FydC9zdXJ2ZXlBcGkvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCB7IGRhdGFiYXNlIH0gPSByZXF1aXJlKCcuLi9jb25maWcvaGVscGVycycpXG5cbi8qIEdFVCBob21lIHBhZ2UuICovXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnJlbmRlcignaW5kZXgnLCB7IHRpdGxlOiAnRXhwcmVzcycgfSk7XG59KTtcblxuXG5yb3V0ZXIucG9zdCgnL3N1cnZleUFzc2lnbicsKHJlcSxyZXMsbmV4dCk9Plxue1xuICAgIGxldCByZXN1bHQgPSByZXEuYm9keTtcbiAgICBjb25zb2xlLmxvZyhyZXN1bHQpXG4gICAgbGV0IGFzc2lnbnMgPSByZXN1bHQuYXNzaWducztcbiAgICBsZXQga2V5cz0gT2JqZWN0LmtleXMocmVzdWx0LmFzc2lnbnMpIFxuXG4gICAgICAgIGtleXMuZm9yRWFjaChrZXkgPT57XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhhc3NpZ25zW2tleV0pO1xuICAgICAgICAgICAgaWYoIGFzc2lnbnNba2V5XSA9PT0gdHJ1ZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBkYXRhYmFzZS5xdWVyeShgaW5zZXJ0IGludG8gc3VydmV5QXNzaWduICh3aG8sd2hvbSxzdXJ2ZXlDYXB0aW9uSWQpIHZhbHVlcyAoJHtyZXN1bHQudXNlcklkfSwke2tleX0sJHthc3NpZ25zLnN1cnZleUNhcHRpb25JZH0pYCkudGhlbigocmVzdWx0LGVycik9PntcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0LGVycilcbiAgICAgICAgICAgICAgICB9KS5jYXRjaChlcnI9PmNvbnNvbGUubG9nKGVycikpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGNvbnNvbGUubG9nKCdla2xlbWVkaScpXG4gICAgICAgIH0pIFxuICAgICAgICByZXMuc2VuZCh7c3VjY2Vzczp0cnVlfSkgIFxuICAgIFxuICAgICBcbiAgICBcbiAgICBcblxuICAgIFxufSlcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "admin.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "database",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "post",
        "result",
        "body",
        "console",
        "log",
        "assigns",
        "keys",
        "Object",
        "forEach",
        "key",
        "query",
        "userId",
        "surveyCaptionId",
        "then",
        "err",
        "catch",
        "send",
        "success",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeH,OAAO,CAAC,mBAAD,CAA5B;AAEA;;;AACAC,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB;AACD,CAFD;AAKAR,MAAM,CAACS,IAAP,CAAY,eAAZ,EAA4B,CAACL,GAAD,EAAKC,GAAL,EAASC,IAAT,KAC5B;AACI,MAAII,MAAM,GAAGN,GAAG,CAACO,IAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,MAAII,OAAO,GAAGJ,MAAM,CAACI,OAArB;AACA,MAAIC,IAAI,GAAEC,MAAM,CAACD,IAAP,CAAYL,MAAM,CAACI,OAAnB,CAAV;AAEIC,EAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAG;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACI,GAAD,CAAnB;;AACA,QAAIJ,OAAO,CAACI,GAAD,CAAP,KAAiB,IAArB,EACA;AACIhB,MAAAA,QAAQ,CAACiB,KAAT,CAAgB,+DAA8DT,MAAM,CAACU,MAAO,IAAGF,GAAI,IAAGJ,OAAO,CAACO,eAAgB,GAA9H,EAAkIC,IAAlI,CAAuI,CAACZ,MAAD,EAAQa,GAAR,KAAc;AACjJX,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAmBa,GAAnB;AACH,OAFD,EAEGC,KAFH,CAESD,GAAG,IAAEX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAFd;AAGH,KALD,MAMKX,OAAO,CAACC,GAAR,CAAY,UAAZ;AACR,GATD;AAUAR,EAAAA,GAAG,CAACoB,IAAJ,CAAS;AAACC,IAAAA,OAAO,EAAC;AAAT,GAAT;AAOP,CAxBD;AAyBAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB",
      "sourceRoot": "/Users/hello/Desktop/Kentkart/surveyApi/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\nconst { database } = require('../config/helpers')\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\n\nrouter.post('/surveyAssign',(req,res,next)=>\n{\n    let result = req.body;\n    console.log(result)\n    let assigns = result.assigns;\n    let keys= Object.keys(result.assigns) \n\n        keys.forEach(key =>{\n            console.log(assigns[key]);\n            if( assigns[key] === true)\n            {\n                database.query(`insert into surveyAssign (who,whom,surveyCaptionId) values (${result.userId},${key},${assigns.surveyCaptionId})`).then((result,err)=>{\n                    console.log(result,err)\n                }).catch(err=>console.log(err))\n            }\n            else console.log('eklemedi')\n        }) \n        res.send({success:true})  \n    \n     \n    \n    \n\n    \n})\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602679021080
  }
}